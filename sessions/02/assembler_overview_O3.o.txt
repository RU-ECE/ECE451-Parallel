
assembler_overview_O3.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0>:
   0:	41 54                	push   %r12
   2:	55                   	push   %rbp
   3:	48 83 ec 08          	sub    $0x8,%rsp
   7:	48 8b 07             	mov    (%rdi),%rax
   a:	48 8b 40 e8          	mov    -0x18(%rax),%rax
   e:	4c 8b a4 07 f0 00 00 	mov    0xf0(%rdi,%rax,1),%r12
  15:	00 
  16:	4d 85 e4             	test   %r12,%r12
  19:	74 44                	je     5f <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0+0x5f>
  1b:	41 80 7c 24 38 00    	cmpb   $0x0,0x38(%r12)
  21:	48 89 fd             	mov    %rdi,%rbp
  24:	74 1d                	je     43 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0+0x43>
  26:	41 0f be 74 24 43    	movsbl 0x43(%r12),%esi
  2c:	48 89 ef             	mov    %rbp,%rdi
  2f:	e8 00 00 00 00       	call   34 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0+0x34>
  34:	48 83 c4 08          	add    $0x8,%rsp
  38:	5d                   	pop    %rbp
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	41 5c                	pop    %r12
  3e:	e9 00 00 00 00       	jmp    43 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0+0x43>
  43:	4c 89 e7             	mov    %r12,%rdi
  46:	e8 00 00 00 00       	call   4b <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0+0x4b>
  4b:	49 8b 04 24          	mov    (%r12),%rax
  4f:	be 0a 00 00 00       	mov    $0xa,%esi
  54:	4c 89 e7             	mov    %r12,%rdi
  57:	ff 50 30             	call   *0x30(%rax)
  5a:	0f be f0             	movsbl %al,%esi
  5d:	eb cd                	jmp    2c <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0+0x2c>
  5f:	e8 00 00 00 00       	call   64 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.isra.0+0x64>
  64:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  6b:	00 00 00 00 
  6f:	90                   	nop

0000000000000070 <_Z11uint64_mathmm>:
  70:	f3 0f 1e fa          	endbr64 
  74:	48 89 f8             	mov    %rdi,%rax
  77:	31 d2                	xor    %edx,%edx
  79:	49 89 f9             	mov    %rdi,%r9
  7c:	49 89 f8             	mov    %rdi,%r8
  7f:	48 f7 f6             	div    %rsi
  82:	4c 0f af c6          	imul   %rsi,%r8
  86:	48 8d 0c 37          	lea    (%rdi,%rsi,1),%rcx
  8a:	49 29 f1             	sub    %rsi,%r9
  8d:	49 0f af c9          	imul   %r9,%rcx
  91:	48 0f af ff          	imul   %rdi,%rdi
  95:	49 0f af c0          	imul   %r8,%rax
  99:	48 29 d1             	sub    %rdx,%rcx
  9c:	48 29 f9             	sub    %rdi,%rcx
  9f:	48 29 c1             	sub    %rax,%rcx
  a2:	48 89 c8             	mov    %rcx,%rax
  a5:	c3                   	ret    
  a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  ad:	00 00 00 

00000000000000b0 <_Z10float_mathff>:
  b0:	f3 0f 1e fa          	endbr64 
  b4:	0f 28 d0             	movaps %xmm0,%xmm2
  b7:	f3 0f 58 c1          	addss  %xmm1,%xmm0
  bb:	0f 28 e2             	movaps %xmm2,%xmm4
  be:	0f 28 da             	movaps %xmm2,%xmm3
  c1:	f3 0f 5e e1          	divss  %xmm1,%xmm4
  c5:	f3 0f 5c d9          	subss  %xmm1,%xmm3
  c9:	f3 0f 59 c3          	mulss  %xmm3,%xmm0
  cd:	0f 28 da             	movaps %xmm2,%xmm3
  d0:	f3 0f 59 d9          	mulss  %xmm1,%xmm3
  d4:	0f 28 c8             	movaps %xmm0,%xmm1
  d7:	f3 0f 10 05 00 00 00 	movss  0x0(%rip),%xmm0        # df <_Z10float_mathff+0x2f>
  de:	00 
  df:	f3 0f 59 c2          	mulss  %xmm2,%xmm0
  e3:	0f 54 15 00 00 00 00 	andps  0x0(%rip),%xmm2        # ea <_Z10float_mathff+0x3a>
  ea:	f3 0f 59 dc          	mulss  %xmm4,%xmm3
  ee:	f3 0f 5c cb          	subss  %xmm3,%xmm1
  f2:	f3 0f 58 c1          	addss  %xmm1,%xmm0
  f6:	f3 0f 58 c2          	addss  %xmm2,%xmm0
  fa:	c3                   	ret    
  fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000100 <_Z11double_mathdd>:
 100:	f3 0f 1e fa          	endbr64 
 104:	66 0f 28 d0          	movapd %xmm0,%xmm2
 108:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
 10c:	66 0f 28 e2          	movapd %xmm2,%xmm4
 110:	66 0f 28 da          	movapd %xmm2,%xmm3
 114:	f2 0f 5e e1          	divsd  %xmm1,%xmm4
 118:	f2 0f 5c d9          	subsd  %xmm1,%xmm3
 11c:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
 120:	66 0f 28 da          	movapd %xmm2,%xmm3
 124:	f2 0f 59 d9          	mulsd  %xmm1,%xmm3
 128:	66 0f 28 c8          	movapd %xmm0,%xmm1
 12c:	f2 0f 10 05 00 00 00 	movsd  0x0(%rip),%xmm0        # 134 <_Z11double_mathdd+0x34>
 133:	00 
 134:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
 138:	66 0f 54 15 00 00 00 	andpd  0x0(%rip),%xmm2        # 140 <_Z11double_mathdd+0x40>
 13f:	00 
 140:	f2 0f 59 dc          	mulsd  %xmm4,%xmm3
 144:	f2 0f 5c cb          	subsd  %xmm3,%xmm1
 148:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
 14c:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
 150:	c3                   	ret    
 151:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
 158:	00 00 00 00 
 15c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000160 <_Z24countPrimesMultithreadedmmPm>:
 160:	f3 0f 1e fa          	endbr64 
 164:	41 56                	push   %r14
 166:	41 55                	push   %r13
 168:	49 89 d5             	mov    %rdx,%r13
 16b:	41 54                	push   %r12
 16d:	45 31 e4             	xor    %r12d,%r12d
 170:	48 83 ff 02          	cmp    $0x2,%rdi
 174:	41 0f 94 c4          	sete   %r12b
 178:	48 83 cf 01          	or     $0x1,%rdi
 17c:	55                   	push   %rbp
 17d:	53                   	push   %rbx
 17e:	48 63 df             	movslq %edi,%rbx
 181:	48 39 de             	cmp    %rbx,%rsi
 184:	72 6d                	jb     1f3 <_Z24countPrimesMultithreadedmmPm+0x93>
 186:	f2 0f 10 0d 00 00 00 	movsd  0x0(%rip),%xmm1        # 18e <_Z24countPrimesMultithreadedmmPm+0x2e>
 18d:	00 
 18e:	48 89 f5             	mov    %rsi,%rbp
 191:	66 0f ef d2          	pxor   %xmm2,%xmm2
 195:	49 be 00 00 00 00 00 	movabs $0x8000000000000000,%r14
 19c:	00 00 80 
 19f:	90                   	nop
 1a0:	48 85 db             	test   %rbx,%rbx
 1a3:	78 6b                	js     210 <_Z24countPrimesMultithreadedmmPm+0xb0>
 1a5:	66 0f ef c0          	pxor   %xmm0,%xmm0
 1a9:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
 1ae:	66 0f 2e d0          	ucomisd %xmm0,%xmm2
 1b2:	77 7a                	ja     22e <_Z24countPrimesMultithreadedmmPm+0xce>
 1b4:	f2 0f 51 c0          	sqrtsd %xmm0,%xmm0
 1b8:	66 0f 2f c1          	comisd %xmm1,%xmm0
 1bc:	73 42                	jae    200 <_Z24countPrimesMultithreadedmmPm+0xa0>
 1be:	f2 48 0f 2c f0       	cvttsd2si %xmm0,%rsi
 1c3:	b9 02 00 00 00       	mov    $0x2,%ecx
 1c8:	48 83 fe 01          	cmp    $0x1,%rsi
 1cc:	77 0f                	ja     1dd <_Z24countPrimesMultithreadedmmPm+0x7d>
 1ce:	eb 16                	jmp    1e6 <_Z24countPrimesMultithreadedmmPm+0x86>
 1d0:	48 89 d8             	mov    %rbx,%rax
 1d3:	31 d2                	xor    %edx,%edx
 1d5:	48 f7 f1             	div    %rcx
 1d8:	48 85 d2             	test   %rdx,%rdx
 1db:	74 0d                	je     1ea <_Z24countPrimesMultithreadedmmPm+0x8a>
 1dd:	48 83 c1 01          	add    $0x1,%rcx
 1e1:	48 39 ce             	cmp    %rcx,%rsi
 1e4:	73 ea                	jae    1d0 <_Z24countPrimesMultithreadedmmPm+0x70>
 1e6:	49 83 c4 01          	add    $0x1,%r12
 1ea:	48 83 c3 02          	add    $0x2,%rbx
 1ee:	48 39 eb             	cmp    %rbp,%rbx
 1f1:	76 ad                	jbe    1a0 <_Z24countPrimesMultithreadedmmPm+0x40>
 1f3:	5b                   	pop    %rbx
 1f4:	5d                   	pop    %rbp
 1f5:	4d 89 65 00          	mov    %r12,0x0(%r13)
 1f9:	41 5c                	pop    %r12
 1fb:	41 5d                	pop    %r13
 1fd:	41 5e                	pop    %r14
 1ff:	c3                   	ret    
 200:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
 204:	f2 48 0f 2c f0       	cvttsd2si %xmm0,%rsi
 209:	4c 31 f6             	xor    %r14,%rsi
 20c:	eb b5                	jmp    1c3 <_Z24countPrimesMultithreadedmmPm+0x63>
 20e:	66 90                	xchg   %ax,%ax
 210:	48 89 d8             	mov    %rbx,%rax
 213:	48 89 da             	mov    %rbx,%rdx
 216:	66 0f ef c0          	pxor   %xmm0,%xmm0
 21a:	48 d1 e8             	shr    %rax
 21d:	83 e2 01             	and    $0x1,%edx
 220:	48 09 d0             	or     %rdx,%rax
 223:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
 228:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
 22c:	eb 80                	jmp    1ae <_Z24countPrimesMultithreadedmmPm+0x4e>
 22e:	e8 00 00 00 00       	call   233 <_Z24countPrimesMultithreadedmmPm+0xd3>
 233:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 23a <_Z24countPrimesMultithreadedmmPm+0xda>
 23a:	66 0f ef d2          	pxor   %xmm2,%xmm2
 23e:	66 48 0f 6e c8       	movq   %rax,%xmm1
 243:	e9 70 ff ff ff       	jmp    1b8 <_Z24countPrimesMultithreadedmmPm+0x58>

Disassembly of section .text.startup:

0000000000000000 <main>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 56                	push   %r14
   6:	48 c7 c6 fb ff ff ff 	mov    $0xfffffffffffffffb,%rsi
   d:	41 55                	push   %r13
   f:	4c 8d 2d 00 00 00 00 	lea    0x0(%rip),%r13        # 16 <main+0x16>
  16:	41 54                	push   %r12
  18:	55                   	push   %rbp
  19:	48 8d 2d 00 00 00 00 	lea    0x0(%rip),%rbp        # 20 <main+0x20>
  20:	48 89 ef             	mov    %rbp,%rdi
  23:	48 83 ec 28          	sub    $0x28,%rsp
  27:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  2e:	00 00 
  30:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  35:	31 c0                	xor    %eax,%eax
  37:	4c 8d 74 24 08       	lea    0x8(%rsp),%r14
  3c:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
  41:	e8 00 00 00 00       	call   46 <main+0x46>
  46:	48 89 c7             	mov    %rax,%rdi
  49:	e8 00 00 00 00       	call   4e <main+0x4e>
  4e:	4c 89 f6             	mov    %r14,%rsi
  51:	4c 89 ef             	mov    %r13,%rdi
  54:	e8 00 00 00 00       	call   59 <main+0x59>
  59:	4c 89 e6             	mov    %r12,%rsi
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	e8 00 00 00 00       	call   64 <main+0x64>
  64:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  69:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  6e:	31 d2                	xor    %edx,%edx
  70:	48 89 c8             	mov    %rcx,%rax
  73:	49 89 f8             	mov    %rdi,%r8
  76:	48 8d 34 0f          	lea    (%rdi,%rcx,1),%rsi
  7a:	49 89 c9             	mov    %rcx,%r9
  7d:	48 f7 f7             	div    %rdi
  80:	4c 0f af c1          	imul   %rcx,%r8
  84:	49 29 f9             	sub    %rdi,%r9
  87:	48 89 ef             	mov    %rbp,%rdi
  8a:	48 0f af c9          	imul   %rcx,%rcx
  8e:	49 0f af f1          	imul   %r9,%rsi
  92:	49 0f af c0          	imul   %r8,%rax
  96:	48 01 d1             	add    %rdx,%rcx
  99:	48 29 ce             	sub    %rcx,%rsi
  9c:	48 29 c6             	sub    %rax,%rsi
  9f:	e8 00 00 00 00       	call   a4 <main+0xa4>
  a4:	ba 01 00 00 00       	mov    $0x1,%edx
  a9:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
  ae:	c6 44 24 07 0a       	movb   $0xa,0x7(%rsp)
  b3:	48 89 c7             	mov    %rax,%rdi
  b6:	e8 00 00 00 00       	call   bb <main+0xbb>
  bb:	4c 89 f6             	mov    %r14,%rsi
  be:	4c 89 ef             	mov    %r13,%rdi
  c1:	e8 00 00 00 00       	call   c6 <main+0xc6>
  c6:	4c 89 e6             	mov    %r12,%rsi
  c9:	48 89 c7             	mov    %rax,%rdi
  cc:	e8 00 00 00 00       	call   d1 <main+0xd1>
  d1:	66 0f ef c0          	pxor   %xmm0,%xmm0
  d5:	48 89 ef             	mov    %rbp,%rdi
  d8:	e8 00 00 00 00       	call   dd <main+0xdd>
  dd:	48 89 c7             	mov    %rax,%rdi
  e0:	e8 00 00 00 00       	call   e5 <main+0xe5>
  e5:	4c 89 f6             	mov    %r14,%rsi
  e8:	4c 89 ef             	mov    %r13,%rdi
  eb:	e8 00 00 00 00       	call   f0 <main+0xf0>
  f0:	4c 89 e6             	mov    %r12,%rsi
  f3:	48 89 c7             	mov    %rax,%rdi
  f6:	e8 00 00 00 00       	call   fb <main+0xfb>
  fb:	48 89 ef             	mov    %rbp,%rdi
  fe:	66 0f ef c0          	pxor   %xmm0,%xmm0
 102:	e8 00 00 00 00       	call   107 <main+0x107>
 107:	48 89 c7             	mov    %rax,%rdi
 10a:	e8 00 00 00 00       	call   10f <main+0x10f>
 10f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
 114:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 11b:	00 00 
 11d:	75 0e                	jne    12d <main+0x12d>
 11f:	48 83 c4 28          	add    $0x28,%rsp
 123:	31 c0                	xor    %eax,%eax
 125:	5d                   	pop    %rbp
 126:	41 5c                	pop    %r12
 128:	41 5d                	pop    %r13
 12a:	41 5e                	pop    %r14
 12c:	c3                   	ret    
 12d:	e8 00 00 00 00       	call   132 <main+0x132>
 132:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
 139:	00 00 00 00 
 13d:	0f 1f 00             	nopl   (%rax)

0000000000000140 <_GLOBAL__sub_I__Z11uint64_mathmm>:
 140:	f3 0f 1e fa          	endbr64 
 144:	55                   	push   %rbp
 145:	48 8d 2d 00 00 00 00 	lea    0x0(%rip),%rbp        # 14c <_GLOBAL__sub_I__Z11uint64_mathmm+0xc>
 14c:	48 89 ef             	mov    %rbp,%rdi
 14f:	e8 00 00 00 00       	call   154 <_GLOBAL__sub_I__Z11uint64_mathmm+0x14>
 154:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 15b <_GLOBAL__sub_I__Z11uint64_mathmm+0x1b>
 15b:	48 89 ee             	mov    %rbp,%rsi
 15e:	5d                   	pop    %rbp
 15f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 166 <_GLOBAL__sub_I__Z11uint64_mathmm+0x26>
 166:	e9 00 00 00 00       	jmp    16b <_Z24countPrimesMultithreadedmmPm+0xb>
